// Importa e configura o dotenv para carregar vari√°veis de ambiente do arquivo .env
import 'dotenv/config';

// Importa o framework Express para criar o servidor web
import express from 'express';

// Importa o middleware CORS para lidar com requisi√ß√µes de origens diferentes
import cors from 'cors'; 

// Importa o m√≥dulo HTTPS para criar servidores HTTPS
import https from 'https'; 

// Importa o m√≥dulo HTTP para criar servidores HTTP
import http from 'http';

// Importa o roteador 'siteRoutes'
import siteRoutes from './routes/site';
import { requestIntercepter } from './utils/requestIntercepter';

// Cria uma inst√¢ncia do aplicativo Express
const app = express(); 

// Usa o middleware CORS para habilitar requisi√ß√µes de origens diferentes
app.use(cors());

// Usa o middleware para analisar corpos de requisi√ß√µes JSON
app.use(express.json());

// Usa o middleware para analisar corpos de requisi√ß√µes URL-encoded
app.use(express.urlencoded({ extended: true })); 

// Monta o middleware 'requestIntercepter' para todas as requisi√ß√µes HTTP em todos os caminhos.
app.all('*', requestIntercepter);

//app.use('/admin', adminRoutes);
// Monta o roteador 'siteRoutes' na rota base '/'.
app.use('/', siteRoutes);

// Fun√ß√£o para iniciar o servidor
const runServer = (port: number, server: http.Server) => {
    server.listen(port, () => {
        console.log(`üöÄ Running at PORT ${port}`); // Exibe no console a porta em que o servidor est√° rodando
    });
}

// Cria um servidor HTTP regular usando a inst√¢ncia do Express
const regularServer = http.createServer(app);

// Verifica se o ambiente √© de produ√ß√£o
if(process.env.NODE_ENV === 'production') {
    // TODO: configurar SSL (Certificado HTTPS) - Necess√°rio para rodar em produ√ß√£o com HTTPS
    // TODO: rodar server na 80 (HTTP) e na 443 (HTTPS) - Configurar redirecionamento de 80 para 443

    // Observa√ß√£o: Em produ√ß√£o, voc√™ geralmente configuraria um servidor HTTPS (usando o m√≥dulo 'https') e redirecionaria as requisi√ß√µes HTTP para HTTPS.
    // Voc√™ precisaria de um certificado SSL v√°lido para isso.
    // Normalmente se utiliza um servi√ßo de proxy reverso como nginx ou um load balancer para tratar o certificado SSL e redirecionamento.
} else {
    // Se o ambiente n√£o for de produ√ß√£o (desenvolvimento), obt√©m a porta do arquivo .env ou usa a porta 9000 como padr√£o
    const serverPort: number = process.env.PORT ? parseInt(process.env.PORT) : 9000;
    // Inicia o servidor HTTP na porta definida
    runServer(serverPort, regularServer);
}